# This is a basic workflow to help you get started with Actions

name: Build and push image to DockerHub

# Controls when the workflow will run
on:
  push:
    branches: [main]
  # update on run of Update Calendso nightly submodule update
  # workflow_run:
  #   workflows: ["Update Calendso"]
  #   branches: [main]
  #   types:
  #     - completed
  # Allow running workflow manually from the Actions tab
  workflow_dispatch:

# Leaving in example for releases. Initially we simply push to 'latest'
# on:
  # release:
    # types: [ created ]

  # # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Configure Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Docker Login
        id: login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker builder
        id: buildx
        uses: docker/setup-buildx-action@v1.6.0

      - name: Build and push image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          # The test image is /docker and is private. final image will be /calendso and public
          tags: ${{ steps.login.outputs.registry }}/calendso:latest
          build-args: |
            BASE_URL=https://schedule.thesis.education
            NEXT_PUBLIC_APP_URL=https://schedule.thesis.education
            NEXT_PUBLIC_LICENSE_CONSENT=agree

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
